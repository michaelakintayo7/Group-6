steps:
# Install PHP dependencies
- name: 'php:8.1-cli'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    composer install

# Install Node.js dependencies
- name: 'node:16'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    npm install

# PHP linting
- name: 'php:8.1-cli'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    vendor/bin/phpcs --standard=PSR12 src/

# JavaScript linting
- name: 'node:16'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    npm run lint

# PHP Unit Tests
- name: 'php:8.1-cli'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    vendor/bin/phpunit --configuration phpunit.xml

# JavaScript Tests
- name: 'node:16'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    npm test

# Build JavaScript assets
- name: 'node:16'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    npm run build

# Optional: Build and deploy PHP application
- name: 'php:8.1-cli'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    zip -r my-application.zip . -x "*.git*"

# saves logs
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['builds', 'submit', '.']

logsBucket: gs://group-6-bucket


# Upload artifacts
artifacts:
  objects:
    location: 'gs://group-6-bucket/build-artifacts/'
    paths: ['**/my-application.zip', 'coverage/**', 'junit/report.xml']

timeout: '1200s'

# manual pull request
name: CD Pipeline

on:
  pull_request:
    branches:
      - development

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Run tests
      run: |
        # Run your tests here
        echo "Running tests..."

    - name: Manual Approval
      if: github.event.pull_request.merged == false
      uses: actions/github-script@v6
      with:
        script: |
          const { Octokit } = require("@octokit/core");
          const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });

          // Require manual approval to proceed
          const approve = await octokit.request('POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews', {
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.payload.pull_request.number,
            event: 'APPROVE'
          });

          if (approve.status !== 200) {
            throw new Error("Approval required");
          }

