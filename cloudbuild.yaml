steps:
# Install PHP dependencies
- name: 'php:8.1-cli'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    composer install

# Install Node.js dependencies
- name: 'node:16'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    npm install

# PHP linting
- name: 'php:8.1-cli'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    vendor/bin/phpcs --standard=PSR12 src/

# JavaScript linting
- name: 'node:16'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    npm run lint

# PHP Unit Tests
- name: 'php:8.1-cli'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    vendor/bin/phpunit --configuration phpunit.xml

# JavaScript Tests
- name: 'node:16'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    npm test

# Build JavaScript assets
- name: 'node:16'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    npm run build

# Optional: Build and deploy PHP application
- name: 'php:8.1-cli'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    zip -r my-application.zip . -x "*.git*"

# saves logs
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['builds', 'submit', '.']

logsBucket: gs://group-6-bucket


# Upload artifacts
artifacts:
  objects:
    location: 'gs://group-6-bucket/build-artifacts/'
    paths: ['**/my-application.zip', 'coverage/**', 'junit/report.xml']

# PUSHING TO APP ENGINE
steps:
  # Install PHP dependencies with Composer
  - name: 'gcr.io/cloud-builders/composer'
    args: ['install']
    
  # Run PHP unit tests
  - name: 'gcr.io/cloud-builders/php'
    entrypoint: 'phpunit'
    args: ['--configuration', 'phpunit.xml']
    
  # Run JavaScript tests (if applicable)
  - name: 'node:14'
    entrypoint: 'bash'
    args: ['-c', 'npm install && npm test']
    
  # Deploy to Google App Engine
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args: ['app', 'deploy', '--quiet']

# Artifacts (optional) for storing build outputs
artifacts:
  objects:
    location: 'gs://your-bucket-name/artifacts/'
    paths: ['**']

# Timeout setting (optional)
timeout: '1200s'



